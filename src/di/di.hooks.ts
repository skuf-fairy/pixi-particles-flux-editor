import { createInjectionHooks } from "brandi-react";
import { DI_TOKENS } from "./di.tokens";

const [
  useEditorAppToken,
  useBloomFilterConfigStoreToken,
  useEmitterConfigToken,
  useAlphaBehaviorStoreToken,
  useScaleBehaviorStoreToken,
  useSpeedBehaviorStoreToken,
  useSpawnShapeBehaviorStoreToken,
  useColorBehaviorStoreToken,
  useLifetimeBehaviorStoreToken,
  useDirectionBehaviorStoreToken,
  useTexturesStoreToken,
  useRotationBehaviorStoreToken,
  useGravityBehaviorStoreToken,
  usePathBehaviorStoreToken,
  useParticleFluxConfigStoreToken,
  useAppConfigStoreToken,
  usePerformanceStoreToken,
  // use-cases
  useInitializeUseCaseToken,
  useSaveParticleFluxConfigUseCaseToken,
  useCopyParticleFluxConfigUseCaseToken,
  useRestoreParticleFluxConfigUseCaseToken,
  useResetParticleFluxConfigUseCaseToken,
  useToggleLocalStorageSaveUseCaseToken,
  useUploadTextureUseCaseToken,
  useDropTextureUseCaseToken,
  useAddChainUseCaseToken,
  useAddChainItemPointUseCaseToken,
  useDropChainItemPointUseCaseToken,
  useChangeChainItemPointUseCaseToken,
  useDropChainUseCaseToken,
  useSelectTextureFromCollectionUseCaseToken,
] = createInjectionHooks(
  DI_TOKENS.editorApp,
  //stores
  DI_TOKENS.bloomFilterConfigStore,
  DI_TOKENS.emitterConfigStore,
  DI_TOKENS.alphaBehaviorStore,
  DI_TOKENS.scaleBehaviorStore,
  DI_TOKENS.speedBehaviorStore,
  DI_TOKENS.spawnShapeBehaviorStore,
  DI_TOKENS.colorBehaviorStore,
  DI_TOKENS.lifetimeBehaviorStore,
  DI_TOKENS.directionBehaviorStore,
  DI_TOKENS.texturesStore,
  DI_TOKENS.rotationBehaviorStore,
  DI_TOKENS.gravityBehaviorStore,
  DI_TOKENS.pathBehaviorStore,
  DI_TOKENS.particleFluxConfigStore,
  DI_TOKENS.appConfigStore,
  DI_TOKENS.performanceStore,
  // use-cases
  DI_TOKENS.initializeUseCase,
  DI_TOKENS.saveParticleFluxConfigUseCase,
  DI_TOKENS.copyParticleFluxConfigUseCase,
  DI_TOKENS.restoreParticleFluxConfigUseCase,
  DI_TOKENS.resetParticleFluxConfigUseCase,
  DI_TOKENS.toggleLocalStorageSaveUseCase,
  DI_TOKENS.uploadTextureUseCase,
  DI_TOKENS.dropTextureUseCase,
  DI_TOKENS.addChainUseCase,
  DI_TOKENS.addChainItemPointUseCase,
  DI_TOKENS.dropChainItemPointUseCase,
  DI_TOKENS.changeChainItemPointUseCase,
  DI_TOKENS.dropChainUseCase,
  DI_TOKENS.selectTextureFromCollectionUseCase
);

export {
  useEditorAppToken,
  useEmitterConfigToken,
  useBloomFilterConfigStoreToken,
  useAlphaBehaviorStoreToken,
  useScaleBehaviorStoreToken,
  useSpeedBehaviorStoreToken,
  useSpawnShapeBehaviorStoreToken,
  useColorBehaviorStoreToken,
  useLifetimeBehaviorStoreToken,
  useDirectionBehaviorStoreToken,
  useTexturesStoreToken,
  useRotationBehaviorStoreToken,
  useGravityBehaviorStoreToken,
  usePathBehaviorStoreToken,
  useParticleFluxConfigStoreToken,
  useAppConfigStoreToken,
  usePerformanceStoreToken,
  // use-cases
  useInitializeUseCaseToken,
  useSaveParticleFluxConfigUseCaseToken,
  useCopyParticleFluxConfigUseCaseToken,
  useRestoreParticleFluxConfigUseCaseToken,
  useResetParticleFluxConfigUseCaseToken,
  useToggleLocalStorageSaveUseCaseToken,
  useUploadTextureUseCaseToken,
  useDropTextureUseCaseToken,
  useAddChainUseCaseToken,
  useAddChainItemPointUseCaseToken,
  useDropChainItemPointUseCaseToken,
  useChangeChainItemPointUseCaseToken,
  useDropChainUseCaseToken,
  useSelectTextureFromCollectionUseCaseToken,
};
